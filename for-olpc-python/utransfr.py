# unit utransfr
# DO NOT EDIT THIS FILE. It was generated by the pdutil program from Parameters.tab. 

from conversion_common import *
import umath
import utdo
import uplant
import uparams
import ucollect
import delphi_compatability

# const
kGeneralLineDivisions = 1
kGeneralRandomSway = 2
kGeneralAgeAtMaturity = 4
kGeneralGrowthSCurve = 5
kGeneralAgeAtWhichFloweringStarts = 6
kGeneralFractionReproductiveAllocationAtMaturity = 7
kGeneralMaleFlowersAreSeparate = 8
kGeneralIsDicot = 9
kGeneralNumApicalInflors = 10
kGeneralNumAxillaryInflors = 11
kGeneralPhyllotacticRotationAngle = 12
kGeneralStartingSeedForRandomNumberGenerator = 13
kMeristemAndLeafArrangement = 15
kMeristemBranchingIndex = 16
kMeristemBranchingDistance = 17
kMeristemSecondaryBranchingIsAllowed = 18
kMeristemBranchingIsSympodial = 19
kMeristemBranchingAngle = 20
kMeristemDeterminateProbability = 21
kAxillaryBudObject3D = 23
kAxillaryBudScale = 24
kAxillaryBudObject3DXRotationBeforeDraw = 25
kAxillaryBudObject3DYRotationBeforeDraw = 26
kAxillaryBudObject3DZRotationBeforeDraw = 27
kAxillaryBudFaceColor = 28
kAxillaryBudBackfaceColor = 29
kInternodeFaceColor = 31
kInternodeFirstInternodeCurvingIndex = 32
kInternodeCurvingIndex = 33
kInternodeLengthAtOptimalFinalBiomassAndExpansion_mm = 35
kInternodeWidthAtOptimalFinalBiomassAndExpansion_mm = 36
kInternodeOptimalFinalBiomass = 38
kInternodeMinDaysToCreateInternode = 39
kInternodeMaxDaysToCreateInternodeIfOverMinFraction = 40
kInternodeMinFractionOfOptimalInitialBiomassToCreateInternode_frn = 41
kInternodeCanRecoverFromStuntingDuringCreation = 42
kInternodeMinDaysToAccumulateBiomass = 44
kInternodeMaxDaysToAccumulateBiomass = 45
kInternodeLengthMultiplierDueToBolting = 47
kInternodeBoltingMinDaysToBolt = 48
kLeafObject3D = 50
kLeafScaleAtOptimalBiomass = 51
kLeafObject3DXRotationBeforeDraw = 52
kLeafObject3DYRotationBeforeDraw = 53
kLeafObject3DZRotationBeforeDraw = 54
kLeafFaceColor = 55
kLeafBackfaceColor = 56
kLeafCompoundNumLeaflets = 58
kLeafCompoundPinnateOrPalmate = 59
kLeafCompoundPinnateArrangement = 60
kLeafCompoundRachisToPetioleRatio = 61
kLeafCompoundBendAngleAtStart = 62
kLeafCompoundBendAngleAtFullSize = 63
kLeafPetioleAngle = 65
kLeafPetioleColor = 66
kLeafPetioleLengthAtOptimalBiomass_mm = 67
kLeafPetioleWidthAtOptimalBiomass_mm = 68
kLeafPetioleTaperIndex = 69
kStipuleNumSections = 71
kStipuleObject3D = 72
kStipuleScaleAtOptimalLeafBiomass = 73
kStipuleObject3DXRotationBeforeDraw = 74
kStipuleObject3DYRotationBeforeDraw = 75
kStipuleObject3DZRotationBeforeDraw = 76
kStipuleFaceColor = 77
kStipuleBackfaceColor = 78
kStipuleAngleFromStem = 79
kLeafOptimalBiomass = 81
kLeafSCurve = 82
kLeafOptimalFractionOfOptimalBiomassAtCreation_frn = 83
kLeafMinDaysToGrow = 85
kLeafMaxDaysToGrow = 86
kSeedlingLeafObject3D = 88
kSeedlingLeafScale = 89
kSeedlingLeafObject3DXRotationBeforeDraw = 90
kSeedlingLeafObject3DYRotationBeforeDraw = 91
kSeedlingLeafObject3DZRotationBeforeDraw = 92
kSeedlingLeafFaceColor = 93
kSeedlingLeafBackfaceColor = 94
kSeedlingLeafNodesOnStemWhenFallsOff = 96
kFlowerNumPetalsFemale = 98
kFlowerFemaleObject3D = 99
kFlowerScaleAtFullSizeFemale = 100
kFlowerFemaleObject3DXRotationBeforeDraw = 101
kFlowerFemaleObject3DYRotationBeforeDraw = 102
kFlowerFemaleObject3DZRotationBeforeDraw = 103
kFlowerFemaleFaceColor = 104
kFlowerFemaleBackfaceColor = 105
kFlowerPetalsAreRadiallyArrangedFemale = 106
kFlowerFemaleObject3DPullbackAngle = 107
kFlowerOptimalBiomassFemale = 109
kFlowerMinFractOptBiomassToOpenFlowerFemale = 110
kFlowerMinFractionOfOptimalBiomassToCreateFruitFemale = 111
kFlowerMinDaysToGrowFemale = 113
kFlowerMaxDaysToGrowIfOverMinFractionFemale = 114
kFlowerMinDaysBeforeOpeningFemale = 115
kFlowerMinDaysBeforeSettingFruit = 116
kFlowerDaysBeforeDropFemale = 117
kInflorescenceNumFlowersOnMainBranchFemale = 119
kInflorescenceNumFlowersPerBranchFemale = 120
kInflorescenceNumBranchesFemale = 121
kInflorescenceFemaleStalkColor = 122
kInflorescenceFemalePedicelColor = 123
kInflorescenceBranchesAreAlternateFemale = 124
kInflorescenceBranchAngleFemale = 125
kInflorescenceInternodeAngleFemale = 126
kInflorescencePedicelAngleFemale = 127
kInflorescencePeduncleAngleFromVegetativeStemFemale = 128
kInflorescencePeduncleAngleFromVegetativeStemApicalFemale = 129
kInflorescenceFlowersSpiralOnStemFemale = 130
kInflorescenceIsHeadFemale = 131
kInflorescenceTerminalStalkLengthFemale = 133
kInflorescencePeduncleLengthFemale = 134
kInflorescenceInternodeLengthFemale = 135
kInflorescencePedicelLengthFemale = 136
kInflorescenceInternodeWidthFemale = 137
kInflorescencePedicelTaperIndexFemale = 138
kInflorescenceIsTerminalFemale = 140
kInflorescenceBiomassRequiredFemale = 141
kInflorescenceMinFractOptBiomassToCreateFemale = 142
kInflorescenceMinFractOptBiomassForFlowersFemale = 143
kInflorescenceDaysToAllFlowersShowingFemale = 145
kInflorescenceFlowersDrawTopToBottomFemale = 146
kInflorescenceMinDaysToCreateInflorescenceFemale = 147
kInflorescenceMaxDaysToCreateIfOverMinFractFemale = 148
kInflorescenceMinDaysToGrowFemale = 149
kInflorescenceMaxDaysToGrowFemale = 150
kInflorescenceFemaleBractNumBracts = 152
kInflorescenceFemaleBractObject3D = 153
kInflorescenceFemaleBractScaleAtFullSize = 154
kInflorescenceFemaleBractObject3DXRotationBeforeDraw = 155
kInflorescenceFemaleBractObject3DYRotationBeforeDraw = 156
kInflorescenceFemaleBractObject3DZRotationBeforeDraw = 157
kInflorescenceFemaleBractFaceColor = 158
kInflorescenceFemaleBractBackfaceColor = 159
kInflorescenceFemaleBractsAreRadiallyArranged = 160
kInflorescenceFemaleBractObject3DPullbackAngle = 161
kFruitNumSections = 163
kFruitObject3D = 164
kFruitScaleAtFullSize = 165
kFruitObject3DXRotationBeforeDraw = 166
kFruitObject3DYRotationBeforeDraw = 167
kFruitObject3DZRotationBeforeDraw = 168
kFruitSectionsAreRadiallyArranged = 169
kFruitUnripeFaceColor = 170
kFruitUnripeBackfaceColor = 171
kFruitRipeFaceColor = 172
kFruitRipeBackfaceColor = 173
kFruitOptimumMass_pctMPB = 175
kFruitSCurve = 176
kFruitMinDaysToGrow = 178
kFruitMaxDaysToGrow = 179
kFruitDaysToRipen = 180
kRootTopShowsAboveGround = 182
kRootTopObject3D = 183
kRootTopScaleAtFullSize = 184
kRootTopObject3DXRotationBeforeDraw = 185
kRootTopObject3DYRotationBeforeDraw = 186
kRootTopObject3DZRotationBeforeDraw = 187
kRootTopFaceColor = 188
kRootTopBackfaceColor = 189
kStateAge = 190
kStateBasePointX = 191
kStateBasePointY = 192
kStateDrawingScale = 193
kStateHidden = 194
kStateSelected = 195
kStateRotationX = 196
kStateRotationY = 197
kStateRotationZ = 198
kFlowerNumPetalsMale = 200
kFlowerMaleObject3D = 201
kFlowerScaleAtFullSizeMale = 202
kFlowerMaleObject3DXRotationBeforeDraw = 203
kFlowerMaleObject3DYRotationBeforeDraw = 204
kFlowerMaleObject3DZRotationBeforeDraw = 205
kFlowerMaleFaceColor = 206
kFlowerMaleBackfaceColor = 207
kFlowerPetalsAreRadiallyArrangedMale = 208
kFlowerMaleObject3DPullbackAngle = 209
kFlowerOptimalBiomassMale = 211
kFlowerMinFractOptBiomassToOpenFlowerMale = 212
kFlowerMinDaysToGrowMale = 214
kFlowerMaxDaysToGrowIfOverMinFractionMale = 215
kFlowerMinDaysBeforeOpeningMale = 216
kFlowerDaysBeforeDropMale = 217
kFlowerNumStamensMale = 219
kFlowerFilamentLengthMale = 220
kFlowerFilamentWidthMale = 221
kFlowerFilamentTaperIndexMale = 222
kFlowerFilamentColorMale = 223
kFlowerAntherMaleObject3DPullbackAngle = 224
kFlowerAntherNumSectionsMale = 225
kFlowerMaleAntherObject3D = 226
kFlowerAntherScaleAtFullSizeMale = 227
kFlowerMaleAntherObject3DXRotationBeforeDraw = 228
kFlowerMaleAntherObject3DYRotationBeforeDraw = 229
kFlowerMaleAntherObject3DZRotationBeforeDraw = 230
kFlowerAntherMaleFaceColor = 231
kFlowerAntherMaleBackfaceColor = 232
kFlowerAntherSectionsAreRadiallyArrangedMale = 233
kFlowerSepalNumPetalsMale = 235
kFlowerMaleSepalObject3D = 236
kFlowerSepalScaleAtFullSizeMale = 237
kFlowerMaleSepalObject3DXRotationBeforeDraw = 238
kFlowerMaleSepalObject3DYRotationBeforeDraw = 239
kFlowerMaleSepalObject3DZRotationBeforeDraw = 240
kFlowerSepalMaleFaceColor = 241
kFlowerSepalMaleBackfaceColor = 242
kFlowerSepalPetalsAreRadiallyArrangedMale = 243
kFlowerSepalMaleObject3DPullbackAngle = 244
kFlowerMaleBudOption = 246
kFlowerBudNumPetalsMale = 247
kFlowerMaleBudObject3D = 248
kFlowerBudScaleAtFullSizeMale = 249
kFlowerMaleBudObject3DXRotationBeforeDraw = 250
kFlowerMaleBudObject3DYRotationBeforeDraw = 251
kFlowerMaleBudObject3DZRotationBeforeDraw = 252
kFlowerBudMaleFaceColor = 253
kFlowerBudMaleBackfaceColor = 254
kFlowerBudPetalsAreRadiallyArrangedMale = 255
kFlowerBudMaleObject3DPullbackAngle = 256
kInflorescenceNumFlowersOnMainBranchMale = 258
kInflorescenceNumFlowersPerBranchMale = 259
kInflorescenceNumBranchesMale = 260
kInflorescenceMaleStalkColor = 261
kInflorescenceMalePedicelColor = 262
kInflorescenceBranchesAreAlternateMale = 263
kInflorescenceBranchAngleMale = 264
kInflorescenceInternodeAngleMale = 265
kInflorescencePedicelAngleMale = 266
kInflorescencePeduncleAngleFromVegetativeStemMale = 267
kInflorescencePeduncleAngleFromVegetativeStemApicalMale = 268
kInflorescenceFlowersSpiralOnStemMale = 269
kInflorescenceIsHeadMale = 270
kInflorescenceTerminalStalkLengthMale = 272
kInflorescencePeduncleLengthMale = 273
kInflorescenceInternodeLengthMale = 274
kInflorescencePedicelLengthMale = 275
kInflorescenceInternodeWidthMale = 276
kInflorescencePedicelTaperIndexMale = 277
kInflorescenceIsTerminalMale = 279
kInflorescenceBiomassRequiredMale = 280
kInflorescenceMinFractOptBiomassToCreateMale = 281
kInflorescenceMinFractOptBiomassForFlowersMale = 282
kInflorescenceDaysToAllFlowersShowingMale = 284
kInflorescenceFlowersDrawTopToBottomMale = 285
kInflorescenceMinDaysToCreateInflorescenceMale = 286
kInflorescenceMaxDaysToCreateIfOverMinFractMale = 287
kInflorescenceMinDaysToGrowMale = 288
kInflorescenceMaxDaysToGrowMale = 289
kInflorescenceMaleBractNumBracts = 291
kInflorescenceMaleBractObject3D = 292
kInflorescenceMaleBractScaleAtFullSize = 293
kInflorescenceMaleBractObject3DXRotationBeforeDraw = 294
kInflorescenceMaleBractObject3DYRotationBeforeDraw = 295
kInflorescenceMaleBractObject3DZRotationBeforeDraw = 296
kInflorescenceMaleBractFaceColor = 297
kInflorescenceMaleBractBackfaceColor = 298
kInflorescenceMaleBractsAreRadiallyArranged = 299
kInflorescenceMaleBractObject3DPullbackAngle = 300
kFlowerNumPistilsFemale = 302
kFlowerStyleLengthFemale = 303
kFlowerStyleWidthFemale = 304
kFlowerStyleTaperIndexFemale = 305
kFlowerStigmaFemaleObject3DPullbackAngle = 306
kFlowerStyleColorFemale = 307
kFlowerStigmaNumSectionsFemale = 308
kFlowerFemaleStigmaObject3D = 309
kFlowerStigmaScaleAtFullSizeFemale = 310
kFlowerFemaleStigmaObject3DXRotationBeforeDraw = 311
kFlowerFemaleStigmaObject3DYRotationBeforeDraw = 312
kFlowerFemaleStigmaObject3DZRotationBeforeDraw = 313
kFlowerStigmaFemaleFaceColor = 314
kFlowerStigmaFemaleBackfaceColor = 315
kFlowerStigmaSectionsAreRadiallyArrangedFemale = 316
kFlowerNumStamensFemale = 318
kFlowerFilamentLengthFemale = 319
kFlowerFilamentWidthFemale = 320
kFlowerFilamentTaperIndexFemale = 321
kFlowerFilamentColorFemale = 322
kFlowerAntherFemaleObject3DPullbackAngle = 323
kFlowerAntherNumSectionsFemale = 324
kFlowerFemaleAntherObject3D = 325
kFlowerAntherScaleAtFullSizeFemale = 326
kFlowerFemaleAntherObject3DXRotationBeforeDraw = 327
kFlowerFemaleAntherObject3DYRotationBeforeDraw = 328
kFlowerFemaleAntherObject3DZRotationBeforeDraw = 329
kFlowerAntherFemaleFaceColor = 330
kFlowerAntherFemaleBackfaceColor = 331
kFlowerAntherSectionsAreRadiallyArrangedFemale = 332
kFlowerPetal2NumPetalsFemale = 334
kFlowerFemalePetal2Object3D = 335
kFlowerPetal2ScaleAtFullSizeFemale = 336
kFlowerFemalePetal2Object3DXRotationBeforeDraw = 337
kFlowerFemalePetal2Object3DYRotationBeforeDraw = 338
kFlowerFemalePetal2Object3DZRotationBeforeDraw = 339
kFlowerPetal2FemaleFaceColor = 340
kFlowerPetal2FemaleBackfaceColor = 341
kFlowerPetal2PetalsAreRadiallyArrangedFemale = 342
kFlowerPetal2FemaleObject3DPullbackAngle = 343
kFlowerPetal3NumPetalsFemale = 345
kFlowerFemalePetal3Object3D = 346
kFlowerPetal3ScaleAtFullSizeFemale = 347
kFlowerFemalePetal3Object3DXRotationBeforeDraw = 348
kFlowerFemalePetal3Object3DYRotationBeforeDraw = 349
kFlowerFemalePetal3Object3DZRotationBeforeDraw = 350
kFlowerPetal3FemaleFaceColor = 351
kFlowerPetal3FemaleBackfaceColor = 352
kFlowerPetal3PetalsAreRadiallyArrangedFemale = 353
kFlowerPetal3FemaleObject3DPullbackAngle = 354
kFlowerPetal4NumPetalsFemale = 356
kFlowerFemalePetal4Object3D = 357
kFlowerPetal4ScaleAtFullSizeFemale = 358
kFlowerFemalePetal4Object3DXRotationBeforeDraw = 359
kFlowerFemalePetal4Object3DYRotationBeforeDraw = 360
kFlowerFemalePetal4Object3DZRotationBeforeDraw = 361
kFlowerPetal4FemaleFaceColor = 362
kFlowerPetal4FemaleBackfaceColor = 363
kFlowerPetal4PetalsAreRadiallyArrangedFemale = 364
kFlowerPetal4FemaleObject3DPullbackAngle = 365
kFlowerPetal5NumPetalsFemale = 367
kFlowerFemalePetal5Object3D = 368
kFlowerPetal5ScaleAtFullSizeFemale = 369
kFlowerFemalePetal5Object3DXRotationBeforeDraw = 370
kFlowerFemalePetal5Object3DYRotationBeforeDraw = 371
kFlowerFemalePetal5Object3DZRotationBeforeDraw = 372
kFlowerPetal5FemaleFaceColor = 373
kFlowerPetal5FemaleBackfaceColor = 374
kFlowerPetal5PetalsAreRadiallyArrangedFemale = 375
kFlowerPetal5FemaleObject3DPullbackAngle = 376
kFlowerSepalNumPetalsFemale = 378
kFlowerFemaleSepalObject3D = 379
kFlowerSepalScaleAtFullSizeFemale = 380
kFlowerFemaleSepalObject3DXRotationBeforeDraw = 381
kFlowerFemaleSepalObject3DYRotationBeforeDraw = 382
kFlowerFemaleSepalObject3DZRotationBeforeDraw = 383
kFlowerSepalFemaleFaceColor = 384
kFlowerSepalFemaleBackfaceColor = 385
kFlowerSepalPetalsAreRadiallyArrangedFemale = 386
kFlowerSepalFemaleObject3DPullbackAngle = 387
kFlowerFemaleBudOption = 389
kFlowerBudNumPetalsFemale = 390
kFlowerFemaleBudObject3D = 391
kFlowerBudScaleAtFullSizeFemale = 392
kFlowerFemaleBudObject3DXRotationBeforeDraw = 393
kFlowerFemaleBudObject3DYRotationBeforeDraw = 394
kFlowerFemaleBudObject3DZRotationBeforeDraw = 395
kFlowerBudFemaleFaceColor = 396
kFlowerBudFemaleBackfaceColor = 397
kFlowerBudPetalsAreRadiallyArrangedFemale = 398
kFlowerBudFemaleObject3DPullbackAngle = 399

def Plant_directTransferField(plantProxy, v, d, fieldID, ft, index, updateList):
    if plantProxy == None:
        raise GeneralException.create("Plant_directTransferField: nil plant")
    plant = plantProxy
    if fieldID == kGeneralLineDivisions:
        plant.pGeneral.lineDivisions, v = plant.MFD(plant.pGeneral.lineDivisions, v, ft, d)
    elif fieldID == kGeneralRandomSway:
        plant.pGeneral.randomSway, v = plant.MFD(plant.pGeneral.randomSway, v, ft, d)
    elif fieldID == kGeneralAgeAtMaturity:
        plant.pGeneral.ageAtMaturity, v = plant.MFD(plant.pGeneral.ageAtMaturity, v, ft, d)
    elif fieldID == kGeneralGrowthSCurve:
        v = umath.transferSCurveValue(d, plant.pGeneral.growthSCurve, index, v)
    elif fieldID == kGeneralAgeAtWhichFloweringStarts:
        plant.pGeneral.ageAtWhichFloweringStarts, v = plant.MFD(plant.pGeneral.ageAtWhichFloweringStarts, v, ft, d)
    elif fieldID == kGeneralFractionReproductiveAllocationAtMaturity:
        plant.pGeneral.fractionReproductiveAllocationAtMaturity_frn, v = plant.MFD(plant.pGeneral.fractionReproductiveAllocationAtMaturity_frn, v, ft, d)
    elif fieldID == kGeneralMaleFlowersAreSeparate:
        plant.pGeneral.maleFlowersAreSeparate, v = plant.MFD(plant.pGeneral.maleFlowersAreSeparate, v, ft, d)
    elif fieldID == kGeneralIsDicot:
        plant.pGeneral.isDicot, v = plant.MFD(plant.pGeneral.isDicot, v, ft, d)
    elif fieldID == kGeneralNumApicalInflors:
        plant.pGeneral.numApicalInflors, v = plant.MFD(plant.pGeneral.numApicalInflors, v, ft, d)
    elif fieldID == kGeneralNumAxillaryInflors:
        plant.pGeneral.numAxillaryInflors, v = plant.MFD(plant.pGeneral.numAxillaryInflors, v, ft, d)
    elif fieldID == kGeneralPhyllotacticRotationAngle:
        plant.pGeneral.phyllotacticRotationAngle, v = plant.MFD(plant.pGeneral.phyllotacticRotationAngle, v, ft, d)
    elif fieldID == kGeneralStartingSeedForRandomNumberGenerator:
        plant.pGeneral.startingSeedForRandomNumberGenerator, v = plant.MFD(plant.pGeneral.startingSeedForRandomNumberGenerator, v, ft, d)
    elif fieldID == kMeristemAndLeafArrangement:
        plant.pMeristem.branchingAndLeafArrangement, v = plant.MFD(plant.pMeristem.branchingAndLeafArrangement, v, ft, d)
    elif fieldID == kMeristemBranchingIndex:
        plant.pMeristem.branchingIndex, v = plant.MFD(plant.pMeristem.branchingIndex, v, ft, d)
    elif fieldID == kMeristemBranchingDistance:
        plant.pMeristem.branchingDistance, v = plant.MFD(plant.pMeristem.branchingDistance, v, ft, d)
    elif fieldID == kMeristemSecondaryBranchingIsAllowed:
        plant.pMeristem.secondaryBranchingIsAllowed, v = plant.MFD(plant.pMeristem.secondaryBranchingIsAllowed, v, ft, d)
    elif fieldID == kMeristemBranchingIsSympodial:
        plant.pMeristem.branchingIsSympodial, v = plant.MFD(plant.pMeristem.branchingIsSympodial, v, ft, d)
    elif fieldID == kMeristemBranchingAngle:
        plant.pMeristem.branchingAngle, v = plant.MFD(plant.pMeristem.branchingAngle, v, ft, d)
    elif fieldID == kMeristemDeterminateProbability:
        plant.pMeristem.determinateProbability, v = plant.MFD(plant.pMeristem.determinateProbability, v, ft, d)
    elif fieldID == kAxillaryBudObject3D:
        plant.transferObject3D(d, plant.pAxillaryBud.tdoParams.object3D, v)
    elif fieldID == kAxillaryBudScale:
        plant.pAxillaryBud.tdoParams.scaleAtFullSize, v = plant.MFD(plant.pAxillaryBud.tdoParams.scaleAtFullSize, v, ft, d)
    elif fieldID == kAxillaryBudObject3DXRotationBeforeDraw:
        plant.pAxillaryBud.tdoParams.xRotationBeforeDraw, v = plant.MFD(plant.pAxillaryBud.tdoParams.xRotationBeforeDraw, v, ft, d)
    elif fieldID == kAxillaryBudObject3DYRotationBeforeDraw:
        plant.pAxillaryBud.tdoParams.yRotationBeforeDraw, v = plant.MFD(plant.pAxillaryBud.tdoParams.yRotationBeforeDraw, v, ft, d)
    elif fieldID == kAxillaryBudObject3DZRotationBeforeDraw:
        plant.pAxillaryBud.tdoParams.zRotationBeforeDraw, v = plant.MFD(plant.pAxillaryBud.tdoParams.zRotationBeforeDraw, v, ft, d)
    elif fieldID == kAxillaryBudFaceColor:
        plant.pAxillaryBud.tdoParams.faceColor, v = plant.MFD(plant.pAxillaryBud.tdoParams.faceColor, v, ft, d)
    elif fieldID == kAxillaryBudBackfaceColor:
        plant.pAxillaryBud.tdoParams.backfaceColor, v = plant.MFD(plant.pAxillaryBud.tdoParams.backfaceColor, v, ft, d)
    elif fieldID == kInternodeFaceColor:
        plant.pInternode.faceColor, v = plant.MFD(plant.pInternode.faceColor, v, ft, d)
    elif fieldID == kInternodeFirstInternodeCurvingIndex:
        plant.pInternode.firstInternodeCurvingIndex, v = plant.MFD(plant.pInternode.firstInternodeCurvingIndex, v, ft, d)
    elif fieldID == kInternodeCurvingIndex:
        plant.pInternode.curvingIndex, v = plant.MFD(plant.pInternode.curvingIndex, v, ft, d)
    elif fieldID == kInternodeLengthAtOptimalFinalBiomassAndExpansion_mm:
        plant.pInternode.lengthAtOptimalFinalBiomassAndExpansion_mm, v = plant.MFD(plant.pInternode.lengthAtOptimalFinalBiomassAndExpansion_mm, v, ft, d)
    elif fieldID == kInternodeWidthAtOptimalFinalBiomassAndExpansion_mm:
        plant.pInternode.widthAtOptimalFinalBiomassAndExpansion_mm, v = plant.MFD(plant.pInternode.widthAtOptimalFinalBiomassAndExpansion_mm, v, ft, d)
    elif fieldID == kInternodeOptimalFinalBiomass:
        plant.pInternode.optimalFinalBiomass_pctMPB, v = plant.MFD(plant.pInternode.optimalFinalBiomass_pctMPB, v, ft, d)
    elif fieldID == kInternodeMinDaysToCreateInternode:
        plant.pInternode.minDaysToCreateInternode, v = plant.MFD(plant.pInternode.minDaysToCreateInternode, v, ft, d)
    elif fieldID == kInternodeMaxDaysToCreateInternodeIfOverMinFraction:
        plant.pInternode.maxDaysToCreateInternodeIfOverMinFraction, v = plant.MFD(plant.pInternode.maxDaysToCreateInternodeIfOverMinFraction, v, ft, d)
    elif fieldID == kInternodeMinFractionOfOptimalInitialBiomassToCreateInternode_frn:
        plant.pInternode.minFractionOfOptimalInitialBiomassToCreateInternode_frn, v = plant.MFD(plant.pInternode.minFractionOfOptimalInitialBiomassToCreateInternode_frn, v, ft, d)
    elif fieldID == kInternodeCanRecoverFromStuntingDuringCreation:
        plant.pInternode.canRecoverFromStuntingDuringCreation, v = plant.MFD(plant.pInternode.canRecoverFromStuntingDuringCreation, v, ft, d)
    elif fieldID == kInternodeMinDaysToAccumulateBiomass:
        plant.pInternode.minDaysToAccumulateBiomass, v = plant.MFD(plant.pInternode.minDaysToAccumulateBiomass, v, ft, d)
    elif fieldID == kInternodeMaxDaysToAccumulateBiomass:
        plant.pInternode.maxDaysToAccumulateBiomass, v = plant.MFD(plant.pInternode.maxDaysToAccumulateBiomass, v, ft, d)
    elif fieldID == kInternodeLengthMultiplierDueToBolting:
        plant.pInternode.lengthMultiplierDueToBolting, v = plant.MFD(plant.pInternode.lengthMultiplierDueToBolting, v, ft, d)
    elif fieldID == kInternodeBoltingMinDaysToBolt:
        plant.pInternode.minDaysToBolt, v = plant.MFD(plant.pInternode.minDaysToBolt, v, ft, d)
    elif fieldID == kLeafObject3D:
        plant.transferObject3D(d, plant.pLeaf.leafTdoParams.object3D, v)
    elif fieldID == kLeafScaleAtOptimalBiomass:
        plant.pLeaf.leafTdoParams.scaleAtFullSize, v = plant.MFD(plant.pLeaf.leafTdoParams.scaleAtFullSize, v, ft, d)
    elif fieldID == kLeafObject3DXRotationBeforeDraw:
        plant.pLeaf.leafTdoParams.xRotationBeforeDraw, v = plant.MFD(plant.pLeaf.leafTdoParams.xRotationBeforeDraw, v, ft, d)
    elif fieldID == kLeafObject3DYRotationBeforeDraw:
        plant.pLeaf.leafTdoParams.yRotationBeforeDraw, v = plant.MFD(plant.pLeaf.leafTdoParams.yRotationBeforeDraw, v, ft, d)
    elif fieldID == kLeafObject3DZRotationBeforeDraw:
        plant.pLeaf.leafTdoParams.zRotationBeforeDraw, v = plant.MFD(plant.pLeaf.leafTdoParams.zRotationBeforeDraw, v, ft, d)
    elif fieldID == kLeafFaceColor:
        plant.pLeaf.leafTdoParams.faceColor, v = plant.MFD(plant.pLeaf.leafTdoParams.faceColor, v, ft, d)
    elif fieldID == kLeafBackfaceColor:
        plant.pLeaf.leafTdoParams.backfaceColor, v = plant.MFD(plant.pLeaf.leafTdoParams.backfaceColor, v, ft, d)
    elif fieldID == kLeafCompoundNumLeaflets:
        plant.pLeaf.compoundNumLeaflets, v = plant.MFD(plant.pLeaf.compoundNumLeaflets, v, ft, d)
    elif fieldID == kLeafCompoundPinnateOrPalmate:
        plant.pLeaf.compoundPinnateOrPalmate, v = plant.MFD(plant.pLeaf.compoundPinnateOrPalmate, v, ft, d)
    elif fieldID == kLeafCompoundPinnateArrangement:
        plant.pLeaf.compoundPinnateLeafletArrangement, v = plant.MFD(plant.pLeaf.compoundPinnateLeafletArrangement, v, ft, d)
    elif fieldID == kLeafCompoundRachisToPetioleRatio:
        plant.pLeaf.compoundRachisToPetioleRatio, v = plant.MFD(plant.pLeaf.compoundRachisToPetioleRatio, v, ft, d)
    elif fieldID == kLeafCompoundBendAngleAtStart:
        plant.pLeaf.compoundCurveAngleAtStart, v = plant.MFD(plant.pLeaf.compoundCurveAngleAtStart, v, ft, d)
    elif fieldID == kLeafCompoundBendAngleAtFullSize:
        plant.pLeaf.compoundCurveAngleAtFullSize, v = plant.MFD(plant.pLeaf.compoundCurveAngleAtFullSize, v, ft, d)
    elif fieldID == kLeafPetioleAngle:
        plant.pLeaf.petioleAngle, v = plant.MFD(plant.pLeaf.petioleAngle, v, ft, d)
    elif fieldID == kLeafPetioleColor:
        plant.pLeaf.petioleColor, v = plant.MFD(plant.pLeaf.petioleColor, v, ft, d)
    elif fieldID == kLeafPetioleLengthAtOptimalBiomass_mm:
        plant.pLeaf.petioleLengthAtOptimalBiomass_mm, v = plant.MFD(plant.pLeaf.petioleLengthAtOptimalBiomass_mm, v, ft, d)
    elif fieldID == kLeafPetioleWidthAtOptimalBiomass_mm:
        plant.pLeaf.petioleWidthAtOptimalBiomass_mm, v = plant.MFD(plant.pLeaf.petioleWidthAtOptimalBiomass_mm, v, ft, d)
    elif fieldID == kLeafPetioleTaperIndex:
        plant.pLeaf.petioleTaperIndex, v = plant.MFD(plant.pLeaf.petioleTaperIndex, v, ft, d)
    elif fieldID == kStipuleNumSections:
        plant.pLeaf.stipuleTdoParams.repetitions, v = plant.MFD(plant.pLeaf.stipuleTdoParams.repetitions, v, ft, d)
    elif fieldID == kStipuleObject3D:
        plant.transferObject3D(d, plant.pLeaf.stipuleTdoParams.object3D, v)
    elif fieldID == kStipuleScaleAtOptimalLeafBiomass:
        plant.pLeaf.stipuleTdoParams.scaleAtFullSize, v = plant.MFD(plant.pLeaf.stipuleTdoParams.scaleAtFullSize, v, ft, d)
    elif fieldID == kStipuleObject3DXRotationBeforeDraw:
        plant.pLeaf.stipuleTdoParams.xRotationBeforeDraw, v = plant.MFD(plant.pLeaf.stipuleTdoParams.xRotationBeforeDraw, v, ft, d)
    elif fieldID == kStipuleObject3DYRotationBeforeDraw:
        plant.pLeaf.stipuleTdoParams.yRotationBeforeDraw, v = plant.MFD(plant.pLeaf.stipuleTdoParams.yRotationBeforeDraw, v, ft, d)
    elif fieldID == kStipuleObject3DZRotationBeforeDraw:
        plant.pLeaf.stipuleTdoParams.zRotationBeforeDraw, v = plant.MFD(plant.pLeaf.stipuleTdoParams.zRotationBeforeDraw, v, ft, d)
    elif fieldID == kStipuleFaceColor:
        plant.pLeaf.stipuleTdoParams.faceColor, v = plant.MFD(plant.pLeaf.stipuleTdoParams.faceColor, v, ft, d)
    elif fieldID == kStipuleBackfaceColor:
        plant.pLeaf.stipuleTdoParams.backfaceColor, v = plant.MFD(plant.pLeaf.stipuleTdoParams.backfaceColor, v, ft, d)
    elif fieldID == kStipuleAngleFromStem:
        plant.pLeaf.stipuleTdoParams.pullBackAngle, v = plant.MFD(plant.pLeaf.stipuleTdoParams.pullBackAngle, v, ft, d)
    elif fieldID == kLeafOptimalBiomass:
        plant.pLeaf.optimalBiomass_pctMPB, v = plant.MFD(plant.pLeaf.optimalBiomass_pctMPB, v, ft, d)
    elif fieldID == kLeafSCurve:
        v = umath.transferSCurveValue(d, plant.pLeaf.sCurveParams, index, v)
    elif fieldID == kLeafOptimalFractionOfOptimalBiomassAtCreation_frn:
        plant.pLeaf.optimalFractionOfOptimalBiomassAtCreation_frn, v = plant.MFD(plant.pLeaf.optimalFractionOfOptimalBiomassAtCreation_frn, v, ft, d)
    elif fieldID == kLeafMinDaysToGrow:
        plant.pLeaf.minDaysToGrow, v = plant.MFD(plant.pLeaf.minDaysToGrow, v, ft, d)
    elif fieldID == kLeafMaxDaysToGrow:
        plant.pLeaf.maxDaysToGrow, v = plant.MFD(plant.pLeaf.maxDaysToGrow, v, ft, d)
    elif fieldID == kSeedlingLeafObject3D:
        plant.transferObject3D(d, plant.pSeedlingLeaf.leafTdoParams.object3D, v)
    elif fieldID == kSeedlingLeafScale:
        plant.pSeedlingLeaf.leafTdoParams.scaleAtFullSize, v = plant.MFD(plant.pSeedlingLeaf.leafTdoParams.scaleAtFullSize, v, ft, d)
    elif fieldID == kSeedlingLeafObject3DXRotationBeforeDraw:
        plant.pSeedlingLeaf.leafTdoParams.xRotationBeforeDraw, v = plant.MFD(plant.pSeedlingLeaf.leafTdoParams.xRotationBeforeDraw, v, ft, d)
    elif fieldID == kSeedlingLeafObject3DYRotationBeforeDraw:
        plant.pSeedlingLeaf.leafTdoParams.yRotationBeforeDraw, v = plant.MFD(plant.pSeedlingLeaf.leafTdoParams.yRotationBeforeDraw, v, ft, d)
    elif fieldID == kSeedlingLeafObject3DZRotationBeforeDraw:
        plant.pSeedlingLeaf.leafTdoParams.zRotationBeforeDraw, v = plant.MFD(plant.pSeedlingLeaf.leafTdoParams.zRotationBeforeDraw, v, ft, d)
    elif fieldID == kSeedlingLeafFaceColor:
        plant.pSeedlingLeaf.leafTdoParams.faceColor, v = plant.MFD(plant.pSeedlingLeaf.leafTdoParams.faceColor, v, ft, d)
    elif fieldID == kSeedlingLeafBackfaceColor:
        plant.pSeedlingLeaf.leafTdoParams.backfaceColor, v = plant.MFD(plant.pSeedlingLeaf.leafTdoParams.backfaceColor, v, ft, d)
    elif fieldID == kSeedlingLeafNodesOnStemWhenFallsOff:
        plant.pSeedlingLeaf.nodesOnStemWhenFallsOff, v = plant.MFD(plant.pSeedlingLeaf.nodesOnStemWhenFallsOff, v, ft, d)
    elif fieldID == kFlowerNumPetalsFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFirstPetals].repetitions, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFirstPetals].repetitions, v, ft, d)
    elif fieldID == kFlowerFemaleObject3D:
        plant.transferObject3D(d, plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFirstPetals].object3D, v)
    elif fieldID == kFlowerScaleAtFullSizeFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFirstPetals].scaleAtFullSize, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFirstPetals].scaleAtFullSize, v, ft, d)
    elif fieldID == kFlowerFemaleObject3DXRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFirstPetals].xRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFirstPetals].xRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerFemaleObject3DYRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFirstPetals].yRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFirstPetals].yRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerFemaleObject3DZRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFirstPetals].zRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFirstPetals].zRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerFemaleFaceColor:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFirstPetals].faceColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFirstPetals].faceColor, v, ft, d)
    elif fieldID == kFlowerFemaleBackfaceColor:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFirstPetals].backfaceColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFirstPetals].backfaceColor, v, ft, d)
    elif fieldID == kFlowerPetalsAreRadiallyArrangedFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFirstPetals].radiallyArranged, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFirstPetals].radiallyArranged, v, ft, d)
    elif fieldID == kFlowerFemaleObject3DPullbackAngle:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFirstPetals].pullBackAngle, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFirstPetals].pullBackAngle, v, ft, d)
    elif fieldID == kFlowerOptimalBiomassFemale:
        plant.pFlower[uplant.kGenderFemale].optimalBiomass_pctMPB, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].optimalBiomass_pctMPB, v, ft, d)
    elif fieldID == kFlowerMinFractOptBiomassToOpenFlowerFemale:
        plant.pFlower[uplant.kGenderFemale].minFractionOfOptimalBiomassToOpenFlower_frn, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].minFractionOfOptimalBiomassToOpenFlower_frn, v, ft, d)
    elif fieldID == kFlowerMinFractionOfOptimalBiomassToCreateFruitFemale:
        plant.pFlower[uplant.kGenderFemale].minFractionOfOptimalBiomassToCreateFruit_frn, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].minFractionOfOptimalBiomassToCreateFruit_frn, v, ft, d)
    elif fieldID == kFlowerMinDaysToGrowFemale:
        plant.pFlower[uplant.kGenderFemale].minDaysToGrow, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].minDaysToGrow, v, ft, d)
    elif fieldID == kFlowerMaxDaysToGrowIfOverMinFractionFemale:
        plant.pFlower[uplant.kGenderFemale].maxDaysToGrowIfOverMinFraction, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].maxDaysToGrowIfOverMinFraction, v, ft, d)
    elif fieldID == kFlowerMinDaysBeforeOpeningFemale:
        plant.pFlower[uplant.kGenderFemale].minDaysToOpenFlower, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].minDaysToOpenFlower, v, ft, d)
    elif fieldID == kFlowerMinDaysBeforeSettingFruit:
        plant.pFlower[uplant.kGenderFemale].minDaysBeforeSettingFruit, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].minDaysBeforeSettingFruit, v, ft, d)
    elif fieldID == kFlowerDaysBeforeDropFemale:
        plant.pFlower[uplant.kGenderFemale].daysBeforeDrop, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].daysBeforeDrop, v, ft, d)
    elif fieldID == kInflorescenceNumFlowersOnMainBranchFemale:
        plant.pInflor[uplant.kGenderFemale].numFlowersOnMainBranch, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].numFlowersOnMainBranch, v, ft, d)
    elif fieldID == kInflorescenceNumFlowersPerBranchFemale:
        plant.pInflor[uplant.kGenderFemale].numFlowersPerBranch, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].numFlowersPerBranch, v, ft, d)
    elif fieldID == kInflorescenceNumBranchesFemale:
        plant.pInflor[uplant.kGenderFemale].numBranches, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].numBranches, v, ft, d)
    elif fieldID == kInflorescenceFemaleStalkColor:
        plant.pInflor[uplant.kGenderFemale].stalkColor, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].stalkColor, v, ft, d)
    elif fieldID == kInflorescenceFemalePedicelColor:
        plant.pInflor[uplant.kGenderFemale].pedicelColor, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].pedicelColor, v, ft, d)
    elif fieldID == kInflorescenceBranchesAreAlternateFemale:
        plant.pInflor[uplant.kGenderFemale].branchesAreAlternate, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].branchesAreAlternate, v, ft, d)
    elif fieldID == kInflorescenceBranchAngleFemale:
        plant.pInflor[uplant.kGenderFemale].branchAngle, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].branchAngle, v, ft, d)
    elif fieldID == kInflorescenceInternodeAngleFemale:
        plant.pInflor[uplant.kGenderFemale].angleBetweenInternodes, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].angleBetweenInternodes, v, ft, d)
    elif fieldID == kInflorescencePedicelAngleFemale:
        plant.pInflor[uplant.kGenderFemale].pedicelAngle, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].pedicelAngle, v, ft, d)
    elif fieldID == kInflorescencePeduncleAngleFromVegetativeStemFemale:
        plant.pInflor[uplant.kGenderFemale].peduncleAngleFromVegetativeStem, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].peduncleAngleFromVegetativeStem, v, ft, d)
    elif fieldID == kInflorescencePeduncleAngleFromVegetativeStemApicalFemale:
        plant.pInflor[uplant.kGenderFemale].apicalStalkAngleFromVegetativeStem, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].apicalStalkAngleFromVegetativeStem, v, ft, d)
    elif fieldID == kInflorescenceFlowersSpiralOnStemFemale:
        plant.pInflor[uplant.kGenderFemale].flowersSpiralOnStem, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].flowersSpiralOnStem, v, ft, d)
    elif fieldID == kInflorescenceIsHeadFemale:
        plant.pInflor[uplant.kGenderFemale].isHead, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].isHead, v, ft, d)
    elif fieldID == kInflorescenceTerminalStalkLengthFemale:
        plant.pInflor[uplant.kGenderFemale].terminalStalkLength_mm, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].terminalStalkLength_mm, v, ft, d)
    elif fieldID == kInflorescencePeduncleLengthFemale:
        plant.pInflor[uplant.kGenderFemale].peduncleLength_mm, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].peduncleLength_mm, v, ft, d)
    elif fieldID == kInflorescenceInternodeLengthFemale:
        plant.pInflor[uplant.kGenderFemale].internodeLength_mm, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].internodeLength_mm, v, ft, d)
    elif fieldID == kInflorescencePedicelLengthFemale:
        plant.pInflor[uplant.kGenderFemale].pedicelLength_mm, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].pedicelLength_mm, v, ft, d)
    elif fieldID == kInflorescenceInternodeWidthFemale:
        plant.pInflor[uplant.kGenderFemale].internodeWidth_mm, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].internodeWidth_mm, v, ft, d)
    elif fieldID == kInflorescencePedicelTaperIndexFemale:
        plant.pInflor[uplant.kGenderFemale].pedicelTaperIndex, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].pedicelTaperIndex, v, ft, d)
    elif fieldID == kInflorescenceIsTerminalFemale:
        plant.pInflor[uplant.kGenderFemale].isTerminal, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].isTerminal, v, ft, d)
    elif fieldID == kInflorescenceBiomassRequiredFemale:
        plant.pInflor[uplant.kGenderFemale].optimalBiomass_pctMPB, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].optimalBiomass_pctMPB, v, ft, d)
    elif fieldID == kInflorescenceMinFractOptBiomassToCreateFemale:
        plant.pInflor[uplant.kGenderFemale].minFractionOfOptimalBiomassToCreateInflorescence_frn, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].minFractionOfOptimalBiomassToCreateInflorescence_frn, v, ft, d)
    elif fieldID == kInflorescenceMinFractOptBiomassForFlowersFemale:
        plant.pInflor[uplant.kGenderFemale].minFractionOfOptimalBiomassToMakeFlowers_frn, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].minFractionOfOptimalBiomassToMakeFlowers_frn, v, ft, d)
    elif fieldID == kInflorescenceDaysToAllFlowersShowingFemale:
        plant.pInflor[uplant.kGenderFemale].daysToAllFlowersCreated, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].daysToAllFlowersCreated, v, ft, d)
    elif fieldID == kInflorescenceFlowersDrawTopToBottomFemale:
        plant.pInflor[uplant.kGenderFemale].flowersDrawTopToBottom, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].flowersDrawTopToBottom, v, ft, d)
    elif fieldID == kInflorescenceMinDaysToCreateInflorescenceFemale:
        plant.pInflor[uplant.kGenderFemale].minDaysToCreateInflorescence, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].minDaysToCreateInflorescence, v, ft, d)
    elif fieldID == kInflorescenceMaxDaysToCreateIfOverMinFractFemale:
        plant.pInflor[uplant.kGenderFemale].maxDaysToCreateInflorescenceIfOverMinFraction, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].maxDaysToCreateInflorescenceIfOverMinFraction, v, ft, d)
    elif fieldID == kInflorescenceMinDaysToGrowFemale:
        plant.pInflor[uplant.kGenderFemale].minDaysToGrow, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].minDaysToGrow, v, ft, d)
    elif fieldID == kInflorescenceMaxDaysToGrowFemale:
        plant.pInflor[uplant.kGenderFemale].maxDaysToGrow, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].maxDaysToGrow, v, ft, d)
    elif fieldID == kInflorescenceFemaleBractNumBracts:
        plant.pInflor[uplant.kGenderFemale].bractTdoParams.repetitions, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].bractTdoParams.repetitions, v, ft, d)
    elif fieldID == kInflorescenceFemaleBractObject3D:
        plant.transferObject3D(d, plant.pInflor[uplant.kGenderFemale].bractTdoParams.object3D, v)
    elif fieldID == kInflorescenceFemaleBractScaleAtFullSize:
        plant.pInflor[uplant.kGenderFemale].bractTdoParams.scaleAtFullSize, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].bractTdoParams.scaleAtFullSize, v, ft, d)
    elif fieldID == kInflorescenceFemaleBractObject3DXRotationBeforeDraw:
        plant.pInflor[uplant.kGenderFemale].bractTdoParams.xRotationBeforeDraw, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].bractTdoParams.xRotationBeforeDraw, v, ft, d)
    elif fieldID == kInflorescenceFemaleBractObject3DYRotationBeforeDraw:
        plant.pInflor[uplant.kGenderFemale].bractTdoParams.yRotationBeforeDraw, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].bractTdoParams.yRotationBeforeDraw, v, ft, d)
    elif fieldID == kInflorescenceFemaleBractObject3DZRotationBeforeDraw:
        plant.pInflor[uplant.kGenderFemale].bractTdoParams.zRotationBeforeDraw, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].bractTdoParams.zRotationBeforeDraw, v, ft, d)
    elif fieldID == kInflorescenceFemaleBractFaceColor:
        plant.pInflor[uplant.kGenderFemale].bractTdoParams.faceColor, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].bractTdoParams.faceColor, v, ft, d)
    elif fieldID == kInflorescenceFemaleBractBackfaceColor:
        plant.pInflor[uplant.kGenderFemale].bractTdoParams.backfaceColor, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].bractTdoParams.backfaceColor, v, ft, d)
    elif fieldID == kInflorescenceFemaleBractsAreRadiallyArranged:
        plant.pInflor[uplant.kGenderFemale].bractTdoParams.radiallyArranged, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].bractTdoParams.radiallyArranged, v, ft, d)
    elif fieldID == kInflorescenceFemaleBractObject3DPullbackAngle:
        plant.pInflor[uplant.kGenderFemale].bractTdoParams.pullBackAngle, v = plant.MFD(plant.pInflor[uplant.kGenderFemale].bractTdoParams.pullBackAngle, v, ft, d)
    elif fieldID == kFruitNumSections:
        plant.pFruit.tdoParams.repetitions, v = plant.MFD(plant.pFruit.tdoParams.repetitions, v, ft, d)
    elif fieldID == kFruitObject3D:
        plant.transferObject3D(d, plant.pFruit.tdoParams.object3D, v)
    elif fieldID == kFruitScaleAtFullSize:
        plant.pFruit.tdoParams.scaleAtFullSize, v = plant.MFD(plant.pFruit.tdoParams.scaleAtFullSize, v, ft, d)
    elif fieldID == kFruitObject3DXRotationBeforeDraw:
        plant.pFruit.tdoParams.xRotationBeforeDraw, v = plant.MFD(plant.pFruit.tdoParams.xRotationBeforeDraw, v, ft, d)
    elif fieldID == kFruitObject3DYRotationBeforeDraw:
        plant.pFruit.tdoParams.yRotationBeforeDraw, v = plant.MFD(plant.pFruit.tdoParams.yRotationBeforeDraw, v, ft, d)
    elif fieldID == kFruitObject3DZRotationBeforeDraw:
        plant.pFruit.tdoParams.zRotationBeforeDraw, v = plant.MFD(plant.pFruit.tdoParams.zRotationBeforeDraw, v, ft, d)
    elif fieldID == kFruitSectionsAreRadiallyArranged:
        plant.pFruit.tdoParams.radiallyArranged, v = plant.MFD(plant.pFruit.tdoParams.radiallyArranged, v, ft, d)
    elif fieldID == kFruitUnripeFaceColor:
        plant.pFruit.tdoParams.alternateFaceColor, v = plant.MFD(plant.pFruit.tdoParams.alternateFaceColor, v, ft, d)
    elif fieldID == kFruitUnripeBackfaceColor:
        plant.pFruit.tdoParams.alternateBackfaceColor, v = plant.MFD(plant.pFruit.tdoParams.alternateBackfaceColor, v, ft, d)
    elif fieldID == kFruitRipeFaceColor:
        plant.pFruit.tdoParams.faceColor, v = plant.MFD(plant.pFruit.tdoParams.faceColor, v, ft, d)
    elif fieldID == kFruitRipeBackfaceColor:
        plant.pFruit.tdoParams.backfaceColor, v = plant.MFD(plant.pFruit.tdoParams.backfaceColor, v, ft, d)
    elif fieldID == kFruitOptimumMass_pctMPB:
        plant.pFruit.optimalBiomass_pctMPB, v = plant.MFD(plant.pFruit.optimalBiomass_pctMPB, v, ft, d)
    elif fieldID == kFruitSCurve:
        v = umath.transferSCurveValue(d, plant.pFruit.sCurveParams, index, v)
    elif fieldID == kFruitMinDaysToGrow:
        plant.pFruit.minDaysToGrow, v = plant.MFD(plant.pFruit.minDaysToGrow, v, ft, d)
    elif fieldID == kFruitMaxDaysToGrow:
        plant.pFruit.maxDaysToGrow, v = plant.MFD(plant.pFruit.maxDaysToGrow, v, ft, d)
    elif fieldID == kFruitDaysToRipen:
        plant.pFruit.daysToRipen, v = plant.MFD(plant.pFruit.daysToRipen, v, ft, d)
    elif fieldID == kRootTopShowsAboveGround:
        plant.pRoot.showsAboveGround, v = plant.MFD(plant.pRoot.showsAboveGround, v, ft, d)
    elif fieldID == kRootTopObject3D:
        plant.transferObject3D(d, plant.pRoot.tdoParams.object3D, v)
    elif fieldID == kRootTopScaleAtFullSize:
        plant.pRoot.tdoParams.scaleAtFullSize, v = plant.MFD(plant.pRoot.tdoParams.scaleAtFullSize, v, ft, d)
    elif fieldID == kRootTopObject3DXRotationBeforeDraw:
        plant.pRoot.tdoParams.xRotationBeforeDraw, v = plant.MFD(plant.pRoot.tdoParams.xRotationBeforeDraw, v, ft, d)
    elif fieldID == kRootTopObject3DYRotationBeforeDraw:
        plant.pRoot.tdoParams.yRotationBeforeDraw, v = plant.MFD(plant.pRoot.tdoParams.yRotationBeforeDraw, v, ft, d)
    elif fieldID == kRootTopObject3DZRotationBeforeDraw:
        plant.pRoot.tdoParams.zRotationBeforeDraw, v = plant.MFD(plant.pRoot.tdoParams.zRotationBeforeDraw, v, ft, d)
    elif fieldID == kRootTopFaceColor:
        plant.pRoot.tdoParams.faceColor, v = plant.MFD(plant.pRoot.tdoParams.faceColor, v, ft, d)
    elif fieldID == kRootTopBackfaceColor:
        plant.pRoot.tdoParams.backfaceColor, v = plant.MFD(plant.pRoot.tdoParams.backfaceColor, v, ft, d)
    elif fieldID == kStateAge:
        plant.age, v = plant.MFD(plant.age, v, ft, d)
    elif fieldID == kStateBasePointX:
        plant.basePoint_mm.x, v = plant.MFD(plant.basePoint_mm.x, v, ft, d)
    elif fieldID == kStateBasePointY:
        plant.basePoint_mm.y, v = plant.MFD(plant.basePoint_mm.y, v, ft, d)
    elif fieldID == kStateDrawingScale:
        plant.drawingScale_PixelsPerMm, v = plant.MFD(plant.drawingScale_PixelsPerMm, v, ft, d)
    elif fieldID == kStateHidden:
        plant.hidden, v = plant.MFD(plant.hidden, v, ft, d)
    elif fieldID == kStateSelected:
        plant.selectedWhenLastSaved, v = plant.MFD(plant.selectedWhenLastSaved, v, ft, d)
    elif fieldID == kStateRotationX:
        plant.xRotation, v = plant.MFD(plant.xRotation, v, ft, d)
    elif fieldID == kStateRotationY:
        plant.yRotation, v = plant.MFD(plant.yRotation, v, ft, d)
    elif fieldID == kStateRotationZ:
        plant.zRotation, v = plant.MFD(plant.zRotation, v, ft, d)
    elif fieldID == kFlowerNumPetalsMale:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kFirstPetals].repetitions, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kFirstPetals].repetitions, v, ft, d)
    return v

def Plant_directTransferField_SecondPart(plantProxy, v, d, fieldID, ft, index, updateList):
    if plantProxy == None:
        raise GeneralException.create("Plant_directTransferField_SecondPart: nil plant")
    plant = plantProxy
    if fieldID == kFlowerMaleObject3D:
        plant.transferObject3D(d, plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kFirstPetals].object3D, v)
    elif fieldID == kFlowerScaleAtFullSizeMale:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kFirstPetals].scaleAtFullSize, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kFirstPetals].scaleAtFullSize, v, ft, d)
    elif fieldID == kFlowerMaleObject3DXRotationBeforeDraw:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kFirstPetals].xRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kFirstPetals].xRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerMaleObject3DYRotationBeforeDraw:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kFirstPetals].yRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kFirstPetals].yRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerMaleObject3DZRotationBeforeDraw:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kFirstPetals].zRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kFirstPetals].zRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerMaleFaceColor:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kFirstPetals].faceColor, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kFirstPetals].faceColor, v, ft, d)
    elif fieldID == kFlowerMaleBackfaceColor:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kFirstPetals].backfaceColor, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kFirstPetals].backfaceColor, v, ft, d)
    elif fieldID == kFlowerPetalsAreRadiallyArrangedMale:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kFirstPetals].radiallyArranged, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kFirstPetals].radiallyArranged, v, ft, d)
    elif fieldID == kFlowerMaleObject3DPullbackAngle:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kFirstPetals].pullBackAngle, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kFirstPetals].pullBackAngle, v, ft, d)
    elif fieldID == kFlowerOptimalBiomassMale:
        plant.pFlower[uplant.kGenderMale].optimalBiomass_pctMPB, v = plant.MFD(plant.pFlower[uplant.kGenderMale].optimalBiomass_pctMPB, v, ft, d)
    elif fieldID == kFlowerMinFractOptBiomassToOpenFlowerMale:
        plant.pFlower[uplant.kGenderMale].minFractionOfOptimalBiomassToOpenFlower_frn, v = plant.MFD(plant.pFlower[uplant.kGenderMale].minFractionOfOptimalBiomassToOpenFlower_frn, v, ft, d)
    elif fieldID == kFlowerMinDaysToGrowMale:
        plant.pFlower[uplant.kGenderMale].minDaysToGrow, v = plant.MFD(plant.pFlower[uplant.kGenderMale].minDaysToGrow, v, ft, d)
    elif fieldID == kFlowerMaxDaysToGrowIfOverMinFractionMale:
        plant.pFlower[uplant.kGenderMale].maxDaysToGrowIfOverMinFraction, v = plant.MFD(plant.pFlower[uplant.kGenderMale].maxDaysToGrowIfOverMinFraction, v, ft, d)
    elif fieldID == kFlowerMinDaysBeforeOpeningMale:
        plant.pFlower[uplant.kGenderMale].minDaysToOpenFlower, v = plant.MFD(plant.pFlower[uplant.kGenderMale].minDaysToOpenFlower, v, ft, d)
    elif fieldID == kFlowerDaysBeforeDropMale:
        plant.pFlower[uplant.kGenderMale].daysBeforeDrop, v = plant.MFD(plant.pFlower[uplant.kGenderMale].daysBeforeDrop, v, ft, d)
    elif fieldID == kFlowerNumStamensMale:
        plant.pFlower[uplant.kGenderMale].numStamens, v = plant.MFD(plant.pFlower[uplant.kGenderMale].numStamens, v, ft, d)
    elif fieldID == kFlowerFilamentLengthMale:
        plant.pFlower[uplant.kGenderMale].filamentLength_mm, v = plant.MFD(plant.pFlower[uplant.kGenderMale].filamentLength_mm, v, ft, d)
    elif fieldID == kFlowerFilamentWidthMale:
        plant.pFlower[uplant.kGenderMale].filamentWidth_mm, v = plant.MFD(plant.pFlower[uplant.kGenderMale].filamentWidth_mm, v, ft, d)
    elif fieldID == kFlowerFilamentTaperIndexMale:
        plant.pFlower[uplant.kGenderMale].filamentTaperIndex, v = plant.MFD(plant.pFlower[uplant.kGenderMale].filamentTaperIndex, v, ft, d)
    elif fieldID == kFlowerFilamentColorMale:
        plant.pFlower[uplant.kGenderMale].filamentColor, v = plant.MFD(plant.pFlower[uplant.kGenderMale].filamentColor, v, ft, d)
    elif fieldID == kFlowerAntherMaleObject3DPullbackAngle:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kStamens].pullBackAngle, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kStamens].pullBackAngle, v, ft, d)
    elif fieldID == kFlowerAntherNumSectionsMale:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kStamens].repetitions, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kStamens].repetitions, v, ft, d)
    elif fieldID == kFlowerMaleAntherObject3D:
        plant.transferObject3D(d, plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kStamens].object3D, v)
    elif fieldID == kFlowerAntherScaleAtFullSizeMale:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kStamens].scaleAtFullSize, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kStamens].scaleAtFullSize, v, ft, d)
    elif fieldID == kFlowerMaleAntherObject3DXRotationBeforeDraw:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kStamens].xRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kStamens].xRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerMaleAntherObject3DYRotationBeforeDraw:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kStamens].yRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kStamens].yRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerMaleAntherObject3DZRotationBeforeDraw:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kStamens].zRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kStamens].zRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerAntherMaleFaceColor:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kStamens].faceColor, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kStamens].faceColor, v, ft, d)
    elif fieldID == kFlowerAntherMaleBackfaceColor:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kStamens].backfaceColor, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kStamens].backfaceColor, v, ft, d)
    elif fieldID == kFlowerAntherSectionsAreRadiallyArrangedMale:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kStamens].radiallyArranged, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kStamens].radiallyArranged, v, ft, d)
    elif fieldID == kFlowerSepalNumPetalsMale:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kSepals].repetitions, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kSepals].repetitions, v, ft, d)
    elif fieldID == kFlowerMaleSepalObject3D:
        plant.transferObject3D(d, plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kSepals].object3D, v)
    elif fieldID == kFlowerSepalScaleAtFullSizeMale:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kSepals].scaleAtFullSize, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kSepals].scaleAtFullSize, v, ft, d)
    elif fieldID == kFlowerMaleSepalObject3DXRotationBeforeDraw:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kSepals].xRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kSepals].xRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerMaleSepalObject3DYRotationBeforeDraw:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kSepals].yRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kSepals].yRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerMaleSepalObject3DZRotationBeforeDraw:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kSepals].zRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kSepals].zRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerSepalMaleFaceColor:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kSepals].faceColor, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kSepals].faceColor, v, ft, d)
    elif fieldID == kFlowerSepalMaleBackfaceColor:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kSepals].backfaceColor, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kSepals].backfaceColor, v, ft, d)
    elif fieldID == kFlowerSepalPetalsAreRadiallyArrangedMale:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kSepals].radiallyArranged, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kSepals].radiallyArranged, v, ft, d)
    elif fieldID == kFlowerSepalMaleObject3DPullbackAngle:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kSepals].pullBackAngle, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kSepals].pullBackAngle, v, ft, d)
    elif fieldID == kFlowerMaleBudOption:
        plant.pFlower[uplant.kGenderMale].budDrawingOption, v = plant.MFD(plant.pFlower[uplant.kGenderMale].budDrawingOption, v, ft, d)
    elif fieldID == kFlowerBudNumPetalsMale:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kBud].repetitions, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kBud].repetitions, v, ft, d)
    elif fieldID == kFlowerMaleBudObject3D:
        plant.transferObject3D(d, plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kBud].object3D, v)
    elif fieldID == kFlowerBudScaleAtFullSizeMale:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kBud].scaleAtFullSize, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kBud].scaleAtFullSize, v, ft, d)
    elif fieldID == kFlowerMaleBudObject3DXRotationBeforeDraw:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kBud].xRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kBud].xRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerMaleBudObject3DYRotationBeforeDraw:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kBud].yRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kBud].yRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerMaleBudObject3DZRotationBeforeDraw:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kBud].zRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kBud].zRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerBudMaleFaceColor:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kBud].faceColor, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kBud].faceColor, v, ft, d)
    elif fieldID == kFlowerBudMaleBackfaceColor:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kBud].backfaceColor, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kBud].backfaceColor, v, ft, d)
    elif fieldID == kFlowerBudPetalsAreRadiallyArrangedMale:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kBud].radiallyArranged, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kBud].radiallyArranged, v, ft, d)
    elif fieldID == kFlowerBudMaleObject3DPullbackAngle:
        plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kBud].pullBackAngle, v = plant.MFD(plant.pFlower[uplant.kGenderMale].tdoParams[uplant.kBud].pullBackAngle, v, ft, d)
    elif fieldID == kInflorescenceNumFlowersOnMainBranchMale:
        plant.pInflor[uplant.kGenderMale].numFlowersOnMainBranch, v = plant.MFD(plant.pInflor[uplant.kGenderMale].numFlowersOnMainBranch, v, ft, d)
    elif fieldID == kInflorescenceNumFlowersPerBranchMale:
        plant.pInflor[uplant.kGenderMale].numFlowersPerBranch, v = plant.MFD(plant.pInflor[uplant.kGenderMale].numFlowersPerBranch, v, ft, d)
    elif fieldID == kInflorescenceNumBranchesMale:
        plant.pInflor[uplant.kGenderMale].numBranches, v = plant.MFD(plant.pInflor[uplant.kGenderMale].numBranches, v, ft, d)
    elif fieldID == kInflorescenceMaleStalkColor:
        plant.pInflor[uplant.kGenderMale].stalkColor, v = plant.MFD(plant.pInflor[uplant.kGenderMale].stalkColor, v, ft, d)
    elif fieldID == kInflorescenceMalePedicelColor:
        plant.pInflor[uplant.kGenderMale].pedicelColor, v = plant.MFD(plant.pInflor[uplant.kGenderMale].pedicelColor, v, ft, d)
    elif fieldID == kInflorescenceBranchesAreAlternateMale:
        plant.pInflor[uplant.kGenderMale].branchesAreAlternate, v = plant.MFD(plant.pInflor[uplant.kGenderMale].branchesAreAlternate, v, ft, d)
    elif fieldID == kInflorescenceBranchAngleMale:
        plant.pInflor[uplant.kGenderMale].branchAngle, v = plant.MFD(plant.pInflor[uplant.kGenderMale].branchAngle, v, ft, d)
    elif fieldID == kInflorescenceInternodeAngleMale:
        plant.pInflor[uplant.kGenderMale].angleBetweenInternodes, v = plant.MFD(plant.pInflor[uplant.kGenderMale].angleBetweenInternodes, v, ft, d)
    elif fieldID == kInflorescencePedicelAngleMale:
        plant.pInflor[uplant.kGenderMale].pedicelAngle, v = plant.MFD(plant.pInflor[uplant.kGenderMale].pedicelAngle, v, ft, d)
    elif fieldID == kInflorescencePeduncleAngleFromVegetativeStemMale:
        plant.pInflor[uplant.kGenderMale].peduncleAngleFromVegetativeStem, v = plant.MFD(plant.pInflor[uplant.kGenderMale].peduncleAngleFromVegetativeStem, v, ft, d)
    elif fieldID == kInflorescencePeduncleAngleFromVegetativeStemApicalMale:
        plant.pInflor[uplant.kGenderMale].apicalStalkAngleFromVegetativeStem, v = plant.MFD(plant.pInflor[uplant.kGenderMale].apicalStalkAngleFromVegetativeStem, v, ft, d)
    elif fieldID == kInflorescenceFlowersSpiralOnStemMale:
        plant.pInflor[uplant.kGenderMale].flowersSpiralOnStem, v = plant.MFD(plant.pInflor[uplant.kGenderMale].flowersSpiralOnStem, v, ft, d)
    elif fieldID == kInflorescenceIsHeadMale:
        plant.pInflor[uplant.kGenderMale].isHead, v = plant.MFD(plant.pInflor[uplant.kGenderMale].isHead, v, ft, d)
    elif fieldID == kInflorescenceTerminalStalkLengthMale:
        plant.pInflor[uplant.kGenderMale].terminalStalkLength_mm, v = plant.MFD(plant.pInflor[uplant.kGenderMale].terminalStalkLength_mm, v, ft, d)
    elif fieldID == kInflorescencePeduncleLengthMale:
        plant.pInflor[uplant.kGenderMale].peduncleLength_mm, v = plant.MFD(plant.pInflor[uplant.kGenderMale].peduncleLength_mm, v, ft, d)
    elif fieldID == kInflorescenceInternodeLengthMale:
        plant.pInflor[uplant.kGenderMale].internodeLength_mm, v = plant.MFD(plant.pInflor[uplant.kGenderMale].internodeLength_mm, v, ft, d)
    elif fieldID == kInflorescencePedicelLengthMale:
        plant.pInflor[uplant.kGenderMale].pedicelLength_mm, v = plant.MFD(plant.pInflor[uplant.kGenderMale].pedicelLength_mm, v, ft, d)
    elif fieldID == kInflorescenceInternodeWidthMale:
        plant.pInflor[uplant.kGenderMale].internodeWidth_mm, v = plant.MFD(plant.pInflor[uplant.kGenderMale].internodeWidth_mm, v, ft, d)
    elif fieldID == kInflorescencePedicelTaperIndexMale:
        plant.pInflor[uplant.kGenderMale].pedicelTaperIndex, v = plant.MFD(plant.pInflor[uplant.kGenderMale].pedicelTaperIndex, v, ft, d)
    elif fieldID == kInflorescenceIsTerminalMale:
        plant.pInflor[uplant.kGenderMale].isTerminal, v = plant.MFD(plant.pInflor[uplant.kGenderMale].isTerminal, v, ft, d)
    elif fieldID == kInflorescenceBiomassRequiredMale:
        plant.pInflor[uplant.kGenderMale].optimalBiomass_pctMPB, v = plant.MFD(plant.pInflor[uplant.kGenderMale].optimalBiomass_pctMPB, v, ft, d)
    elif fieldID == kInflorescenceMinFractOptBiomassToCreateMale:
        plant.pInflor[uplant.kGenderMale].minFractionOfOptimalBiomassToCreateInflorescence_frn, v = plant.MFD(plant.pInflor[uplant.kGenderMale].minFractionOfOptimalBiomassToCreateInflorescence_frn, v, ft, d)
    elif fieldID == kInflorescenceMinFractOptBiomassForFlowersMale:
        plant.pInflor[uplant.kGenderMale].minFractionOfOptimalBiomassToMakeFlowers_frn, v = plant.MFD(plant.pInflor[uplant.kGenderMale].minFractionOfOptimalBiomassToMakeFlowers_frn, v, ft, d)
    elif fieldID == kInflorescenceDaysToAllFlowersShowingMale:
        plant.pInflor[uplant.kGenderMale].daysToAllFlowersCreated, v = plant.MFD(plant.pInflor[uplant.kGenderMale].daysToAllFlowersCreated, v, ft, d)
    elif fieldID == kInflorescenceFlowersDrawTopToBottomMale:
        plant.pInflor[uplant.kGenderMale].flowersDrawTopToBottom, v = plant.MFD(plant.pInflor[uplant.kGenderMale].flowersDrawTopToBottom, v, ft, d)
    elif fieldID == kInflorescenceMinDaysToCreateInflorescenceMale:
        plant.pInflor[uplant.kGenderMale].minDaysToCreateInflorescence, v = plant.MFD(plant.pInflor[uplant.kGenderMale].minDaysToCreateInflorescence, v, ft, d)
    elif fieldID == kInflorescenceMaxDaysToCreateIfOverMinFractMale:
        plant.pInflor[uplant.kGenderMale].maxDaysToCreateInflorescenceIfOverMinFraction, v = plant.MFD(plant.pInflor[uplant.kGenderMale].maxDaysToCreateInflorescenceIfOverMinFraction, v, ft, d)
    elif fieldID == kInflorescenceMinDaysToGrowMale:
        plant.pInflor[uplant.kGenderMale].minDaysToGrow, v = plant.MFD(plant.pInflor[uplant.kGenderMale].minDaysToGrow, v, ft, d)
    elif fieldID == kInflorescenceMaxDaysToGrowMale:
        plant.pInflor[uplant.kGenderMale].maxDaysToGrow, v = plant.MFD(plant.pInflor[uplant.kGenderMale].maxDaysToGrow, v, ft, d)
    elif fieldID == kInflorescenceMaleBractNumBracts:
        plant.pInflor[uplant.kGenderMale].bractTdoParams.repetitions, v = plant.MFD(plant.pInflor[uplant.kGenderMale].bractTdoParams.repetitions, v, ft, d)
    elif fieldID == kInflorescenceMaleBractObject3D:
        plant.transferObject3D(d, plant.pInflor[uplant.kGenderMale].bractTdoParams.object3D, v)
    elif fieldID == kInflorescenceMaleBractScaleAtFullSize:
        plant.pInflor[uplant.kGenderMale].bractTdoParams.scaleAtFullSize, v = plant.MFD(plant.pInflor[uplant.kGenderMale].bractTdoParams.scaleAtFullSize, v, ft, d)
    elif fieldID == kInflorescenceMaleBractObject3DXRotationBeforeDraw:
        plant.pInflor[uplant.kGenderMale].bractTdoParams.xRotationBeforeDraw, v = plant.MFD(plant.pInflor[uplant.kGenderMale].bractTdoParams.xRotationBeforeDraw, v, ft, d)
    elif fieldID == kInflorescenceMaleBractObject3DYRotationBeforeDraw:
        plant.pInflor[uplant.kGenderMale].bractTdoParams.yRotationBeforeDraw, v = plant.MFD(plant.pInflor[uplant.kGenderMale].bractTdoParams.yRotationBeforeDraw, v, ft, d)
    elif fieldID == kInflorescenceMaleBractObject3DZRotationBeforeDraw:
        plant.pInflor[uplant.kGenderMale].bractTdoParams.zRotationBeforeDraw, v = plant.MFD(plant.pInflor[uplant.kGenderMale].bractTdoParams.zRotationBeforeDraw, v, ft, d)
    elif fieldID == kInflorescenceMaleBractFaceColor:
        plant.pInflor[uplant.kGenderMale].bractTdoParams.faceColor, v = plant.MFD(plant.pInflor[uplant.kGenderMale].bractTdoParams.faceColor, v, ft, d)
    elif fieldID == kInflorescenceMaleBractBackfaceColor:
        plant.pInflor[uplant.kGenderMale].bractTdoParams.backfaceColor, v = plant.MFD(plant.pInflor[uplant.kGenderMale].bractTdoParams.backfaceColor, v, ft, d)
    elif fieldID == kInflorescenceMaleBractsAreRadiallyArranged:
        plant.pInflor[uplant.kGenderMale].bractTdoParams.radiallyArranged, v = plant.MFD(plant.pInflor[uplant.kGenderMale].bractTdoParams.radiallyArranged, v, ft, d)
    elif fieldID == kInflorescenceMaleBractObject3DPullbackAngle:
        plant.pInflor[uplant.kGenderMale].bractTdoParams.pullBackAngle, v = plant.MFD(plant.pInflor[uplant.kGenderMale].bractTdoParams.pullBackAngle, v, ft, d)
    elif fieldID == kFlowerNumPistilsFemale:
        plant.pFlower[uplant.kGenderFemale].numPistils, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].numPistils, v, ft, d)
    elif fieldID == kFlowerStyleLengthFemale:
        plant.pFlower[uplant.kGenderFemale].styleLength_mm, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].styleLength_mm, v, ft, d)
    elif fieldID == kFlowerStyleWidthFemale:
        plant.pFlower[uplant.kGenderFemale].styleWidth_mm, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].styleWidth_mm, v, ft, d)
    elif fieldID == kFlowerStyleTaperIndexFemale:
        plant.pFlower[uplant.kGenderFemale].styleTaperIndex, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].styleTaperIndex, v, ft, d)
    elif fieldID == kFlowerStigmaFemaleObject3DPullbackAngle:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kPistils].pullBackAngle, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kPistils].pullBackAngle, v, ft, d)
    elif fieldID == kFlowerStyleColorFemale:
        plant.pFlower[uplant.kGenderFemale].styleColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].styleColor, v, ft, d)
    elif fieldID == kFlowerStigmaNumSectionsFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kPistils].repetitions, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kPistils].repetitions, v, ft, d)
    elif fieldID == kFlowerFemaleStigmaObject3D:
        plant.transferObject3D(d, plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kPistils].object3D, v)
    elif fieldID == kFlowerStigmaScaleAtFullSizeFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kPistils].scaleAtFullSize, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kPistils].scaleAtFullSize, v, ft, d)
    elif fieldID == kFlowerFemaleStigmaObject3DXRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kPistils].xRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kPistils].xRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerFemaleStigmaObject3DYRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kPistils].yRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kPistils].yRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerFemaleStigmaObject3DZRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kPistils].zRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kPistils].zRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerStigmaFemaleFaceColor:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kPistils].faceColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kPistils].faceColor, v, ft, d)
    elif fieldID == kFlowerStigmaFemaleBackfaceColor:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kPistils].backfaceColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kPistils].backfaceColor, v, ft, d)
    elif fieldID == kFlowerStigmaSectionsAreRadiallyArrangedFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kPistils].radiallyArranged, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kPistils].radiallyArranged, v, ft, d)
    elif fieldID == kFlowerNumStamensFemale:
        plant.pFlower[uplant.kGenderFemale].numStamens, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].numStamens, v, ft, d)
    elif fieldID == kFlowerFilamentLengthFemale:
        plant.pFlower[uplant.kGenderFemale].filamentLength_mm, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].filamentLength_mm, v, ft, d)
    elif fieldID == kFlowerFilamentWidthFemale:
        plant.pFlower[uplant.kGenderFemale].filamentWidth_mm, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].filamentWidth_mm, v, ft, d)
    elif fieldID == kFlowerFilamentTaperIndexFemale:
        plant.pFlower[uplant.kGenderFemale].filamentTaperIndex, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].filamentTaperIndex, v, ft, d)
    elif fieldID == kFlowerFilamentColorFemale:
        plant.pFlower[uplant.kGenderFemale].filamentColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].filamentColor, v, ft, d)
    elif fieldID == kFlowerAntherFemaleObject3DPullbackAngle:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kStamens].pullBackAngle, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kStamens].pullBackAngle, v, ft, d)
    elif fieldID == kFlowerAntherNumSectionsFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kStamens].repetitions, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kStamens].repetitions, v, ft, d)
    elif fieldID == kFlowerFemaleAntherObject3D:
        plant.transferObject3D(d, plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kStamens].object3D, v)
    elif fieldID == kFlowerAntherScaleAtFullSizeFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kStamens].scaleAtFullSize, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kStamens].scaleAtFullSize, v, ft, d)
    elif fieldID == kFlowerFemaleAntherObject3DXRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kStamens].xRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kStamens].xRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerFemaleAntherObject3DYRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kStamens].yRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kStamens].yRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerFemaleAntherObject3DZRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kStamens].zRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kStamens].zRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerAntherFemaleFaceColor:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kStamens].faceColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kStamens].faceColor, v, ft, d)
    elif fieldID == kFlowerAntherFemaleBackfaceColor:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kStamens].backfaceColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kStamens].backfaceColor, v, ft, d)
    elif fieldID == kFlowerAntherSectionsAreRadiallyArrangedFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kStamens].radiallyArranged, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kStamens].radiallyArranged, v, ft, d)
    elif fieldID == kFlowerPetal2NumPetalsFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSecondPetals].repetitions, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSecondPetals].repetitions, v, ft, d)
    elif fieldID == kFlowerFemalePetal2Object3D:
        plant.transferObject3D(d, plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSecondPetals].object3D, v)
    elif fieldID == kFlowerPetal2ScaleAtFullSizeFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSecondPetals].scaleAtFullSize, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSecondPetals].scaleAtFullSize, v, ft, d)
    elif fieldID == kFlowerFemalePetal2Object3DXRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSecondPetals].xRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSecondPetals].xRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerFemalePetal2Object3DYRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSecondPetals].yRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSecondPetals].yRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerFemalePetal2Object3DZRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSecondPetals].zRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSecondPetals].zRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerPetal2FemaleFaceColor:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSecondPetals].faceColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSecondPetals].faceColor, v, ft, d)
    elif fieldID == kFlowerPetal2FemaleBackfaceColor:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSecondPetals].backfaceColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSecondPetals].backfaceColor, v, ft, d)
    elif fieldID == kFlowerPetal2PetalsAreRadiallyArrangedFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSecondPetals].radiallyArranged, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSecondPetals].radiallyArranged, v, ft, d)
    elif fieldID == kFlowerPetal2FemaleObject3DPullbackAngle:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSecondPetals].pullBackAngle, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSecondPetals].pullBackAngle, v, ft, d)
    elif fieldID == kFlowerPetal3NumPetalsFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kThirdPetals].repetitions, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kThirdPetals].repetitions, v, ft, d)
    elif fieldID == kFlowerFemalePetal3Object3D:
        plant.transferObject3D(d, plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kThirdPetals].object3D, v)
    elif fieldID == kFlowerPetal3ScaleAtFullSizeFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kThirdPetals].scaleAtFullSize, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kThirdPetals].scaleAtFullSize, v, ft, d)
    elif fieldID == kFlowerFemalePetal3Object3DXRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kThirdPetals].xRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kThirdPetals].xRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerFemalePetal3Object3DYRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kThirdPetals].yRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kThirdPetals].yRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerFemalePetal3Object3DZRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kThirdPetals].zRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kThirdPetals].zRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerPetal3FemaleFaceColor:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kThirdPetals].faceColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kThirdPetals].faceColor, v, ft, d)
    elif fieldID == kFlowerPetal3FemaleBackfaceColor:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kThirdPetals].backfaceColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kThirdPetals].backfaceColor, v, ft, d)
    elif fieldID == kFlowerPetal3PetalsAreRadiallyArrangedFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kThirdPetals].radiallyArranged, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kThirdPetals].radiallyArranged, v, ft, d)
    elif fieldID == kFlowerPetal3FemaleObject3DPullbackAngle:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kThirdPetals].pullBackAngle, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kThirdPetals].pullBackAngle, v, ft, d)
    elif fieldID == kFlowerPetal4NumPetalsFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFourthPetals].repetitions, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFourthPetals].repetitions, v, ft, d)
    elif fieldID == kFlowerFemalePetal4Object3D:
        plant.transferObject3D(d, plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFourthPetals].object3D, v)
    elif fieldID == kFlowerPetal4ScaleAtFullSizeFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFourthPetals].scaleAtFullSize, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFourthPetals].scaleAtFullSize, v, ft, d)
    elif fieldID == kFlowerFemalePetal4Object3DXRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFourthPetals].xRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFourthPetals].xRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerFemalePetal4Object3DYRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFourthPetals].yRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFourthPetals].yRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerFemalePetal4Object3DZRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFourthPetals].zRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFourthPetals].zRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerPetal4FemaleFaceColor:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFourthPetals].faceColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFourthPetals].faceColor, v, ft, d)
    elif fieldID == kFlowerPetal4FemaleBackfaceColor:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFourthPetals].backfaceColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFourthPetals].backfaceColor, v, ft, d)
    elif fieldID == kFlowerPetal4PetalsAreRadiallyArrangedFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFourthPetals].radiallyArranged, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFourthPetals].radiallyArranged, v, ft, d)
    elif fieldID == kFlowerPetal4FemaleObject3DPullbackAngle:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFourthPetals].pullBackAngle, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFourthPetals].pullBackAngle, v, ft, d)
    elif fieldID == kFlowerPetal5NumPetalsFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFifthPetals].repetitions, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFifthPetals].repetitions, v, ft, d)
    elif fieldID == kFlowerFemalePetal5Object3D:
        plant.transferObject3D(d, plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFifthPetals].object3D, v)
    elif fieldID == kFlowerPetal5ScaleAtFullSizeFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFifthPetals].scaleAtFullSize, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFifthPetals].scaleAtFullSize, v, ft, d)
    elif fieldID == kFlowerFemalePetal5Object3DXRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFifthPetals].xRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFifthPetals].xRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerFemalePetal5Object3DYRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFifthPetals].yRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFifthPetals].yRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerFemalePetal5Object3DZRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFifthPetals].zRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFifthPetals].zRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerPetal5FemaleFaceColor:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFifthPetals].faceColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFifthPetals].faceColor, v, ft, d)
    elif fieldID == kFlowerPetal5FemaleBackfaceColor:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFifthPetals].backfaceColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFifthPetals].backfaceColor, v, ft, d)
    elif fieldID == kFlowerPetal5PetalsAreRadiallyArrangedFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFifthPetals].radiallyArranged, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFifthPetals].radiallyArranged, v, ft, d)
    elif fieldID == kFlowerPetal5FemaleObject3DPullbackAngle:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFifthPetals].pullBackAngle, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kFifthPetals].pullBackAngle, v, ft, d)
    elif fieldID == kFlowerSepalNumPetalsFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSepals].repetitions, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSepals].repetitions, v, ft, d)
    elif fieldID == kFlowerFemaleSepalObject3D:
        plant.transferObject3D(d, plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSepals].object3D, v)
    elif fieldID == kFlowerSepalScaleAtFullSizeFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSepals].scaleAtFullSize, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSepals].scaleAtFullSize, v, ft, d)
    elif fieldID == kFlowerFemaleSepalObject3DXRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSepals].xRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSepals].xRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerFemaleSepalObject3DYRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSepals].yRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSepals].yRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerFemaleSepalObject3DZRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSepals].zRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSepals].zRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerSepalFemaleFaceColor:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSepals].faceColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSepals].faceColor, v, ft, d)
    elif fieldID == kFlowerSepalFemaleBackfaceColor:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSepals].backfaceColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSepals].backfaceColor, v, ft, d)
    elif fieldID == kFlowerSepalPetalsAreRadiallyArrangedFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSepals].radiallyArranged, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSepals].radiallyArranged, v, ft, d)
    elif fieldID == kFlowerSepalFemaleObject3DPullbackAngle:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSepals].pullBackAngle, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kSepals].pullBackAngle, v, ft, d)
    elif fieldID == kFlowerFemaleBudOption:
        plant.pFlower[uplant.kGenderFemale].budDrawingOption, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].budDrawingOption, v, ft, d)
    elif fieldID == kFlowerBudNumPetalsFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kBud].repetitions, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kBud].repetitions, v, ft, d)
    elif fieldID == kFlowerFemaleBudObject3D:
        plant.transferObject3D(d, plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kBud].object3D, v)
    elif fieldID == kFlowerBudScaleAtFullSizeFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kBud].scaleAtFullSize, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kBud].scaleAtFullSize, v, ft, d)
    elif fieldID == kFlowerFemaleBudObject3DXRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kBud].xRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kBud].xRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerFemaleBudObject3DYRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kBud].yRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kBud].yRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerFemaleBudObject3DZRotationBeforeDraw:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kBud].zRotationBeforeDraw, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kBud].zRotationBeforeDraw, v, ft, d)
    elif fieldID == kFlowerBudFemaleFaceColor:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kBud].faceColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kBud].faceColor, v, ft, d)
    elif fieldID == kFlowerBudFemaleBackfaceColor:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kBud].backfaceColor, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kBud].backfaceColor, v, ft, d)
    elif fieldID == kFlowerBudPetalsAreRadiallyArrangedFemale:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kBud].radiallyArranged, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kBud].radiallyArranged, v, ft, d)
    elif fieldID == kFlowerBudFemaleObject3DPullbackAngle:
        plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kBud].pullBackAngle, v = plant.MFD(plant.pFlower[uplant.kGenderFemale].tdoParams[uplant.kBud].pullBackAngle, v, ft, d)
    return v

